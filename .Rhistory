matlab::zeros(nrow(Matrix::bdiag(In)),ncol(Fmr[[1]])) %>%
cbind(Matrix::bdiag(In),.) %>% rbind(phin,.)
load_all()
ar2ma(ar,3)
ar2ma(ar,3)
load_all()
ar2ma(ar,3)
fit <- vars::VAR(Canada, p = 2, type = "none")
fit
summary(fit)
ar2ma(ar)
ar <- vars::Bcoef(vars::VAR(Canada, p = 2, type = "none"))
ar2ma(ar)
ar <- vars::Bcoef(vars::VAR(Canada, p = 3, type = "none"))
fit <- vars::VAR(Canada, p = 3, type = "none"))
fit <- vars::VAR(Canada, p = 3, type = "none")
summary(fit)
ar2ma(ar)
data(Canada)
data(Canada, package = 'vars')
Canada
xlsx::write.xlsx(Canada, file = 'data-raw/canada.xlsx')
ar
ma <- ar2ma(ar)
ans <- ma[[2]]
library(vars)
?resid
fit <- vars::VAR(Canada, p = 2, type = "none")
fit <- vars::VAR(Canada, p = 3, type = "none")
residuals(fit)
residuals(fit) %*% t(residuals(fit))
t(residuals(fit)) %*% residuals(fit)
fit <- vars::VAR(Canada, p = 3, type = "drift")
fit <- vars::VAR(Canada, p = 3, type = "const")
t(residuals(fit)) %*% residuals(fit)
ar
ma[[1]]
ma[[2]]
ell <- matlab::zeros(nrow(ans),1)
ans %*% sig_u %*% ell
sig_u = t(residuals(fit)) %*% residuals(fit)
ans %*% sig_u %*% ell
imp_var <- 3
sig_u = t(residuals(fit)) %*% residuals(fit)
ma = ar2ma(ar)
ans <- ma[[2]]
ell <- matlab::zeros(nrow(ans),1)
ell[imp_var] <- 1
ans %*% sig_u %*% ell
ans %*% sig_u %*% ell/sqrt(t(ell) %*% sig_u %*% ell)
t(ell) %*% sig_u %*% ell
sqrt(t(ell) %*% sig_u %*% ell)
ans %*% sig_u %*% ell
(ans %*% sig_u %*% ell)/sqrt(t(ell) %*% sig_u %*% ell)
(ans %*% sig_u %*% ell) * sqrt(t(ell) %*% sig_u %*% ell)
2 * matrix(2,2,1)
(ans %*% sig_u %*% ell)
sqrt(t(ell) %*% sig_u %*% ell) * (ans %*% sig_u %*% ell)
sqrt(t(ell) %*% sig_u %*% ell)
(ans %*% sig_u %*% ell)/(as.numeric(sqrt(t(ell) %*% sig_u %*% ell)))
ar
lapply(ma, GI_single, imp_var = imp_var)
GI_single <- function(ans, imp_var){
ell <- matlab::zeros(nrow(ans),1)
ell[imp_var] <- 1
return((ans %*% sig_u %*% ell)/(as.numeric(sqrt(t(ell) %*% sig_u %*% ell))))
}
lapply(ma, GI_single, imp_var = imp_var)
lapply(ma, GI_single, imp_var = imp_var) %>% dplyr::bind_cols()
dplyr::bind_cols(irf)
irf <- lapply(ma, GI_single, imp_var = imp_var)
dplyr::bind_cols(irf)
ans <- dplyr::bind_cols(irf)
irf <- lapply(ma, GI_single, imp_var = imp_var)
ans <- dplyr::bind_cols(irf)
row.names(ans) <- row.names(irf[[1]])
ans
row.names(ans)
row.names(irf[[1]])
irf[[1]]
ma[[1]]
View(ma)
ma[["1"]]
row.names(ans) <- row.names(ma[[2]])
row.names(ans)
ans
?tibble
ans <- dplyr::bind_cols(irf) %>% as.data.frame()
row.names(ans) <- row.names(ma[[2]])
ans
library(devtools)
library(usethis)
use_package('dplyr')
document()
check()
document()
check()
check()
document()
check()
1 %>% c(2)
1 %>% c(2,'.')
1 %>% c(2,`.`)
1 %>% c(2,3,`.`)
check()
## code to prepare `test` dataset goes here
devtools::load_all()
library(vars)
library(tidyverse)
data(Canada, package = 'vars')
ar <- vars::VAR(Canada, p = 2, type = "none") %>% vars::Bcoef()
ar2ma(ar)
ma <- ar2ma(ar)
# GIRF
fit <- vars::VAR(Canada, p = 2, type = "none")
sig_u = t(residuals(fit)) %*% residuals(fit)
GI(ma, sig_u, imp_var = 1)
?GI
View(ar)
7*2.5
length('')
ans <- ''
ans <- 'a'
length('')
length(ans)
nchar('')
rm(list = ls())
devtools::load_all()
library(reticulate)
rawtext <- '我是中国人'
sl <- import('selenium')
drv <- sl$webdriver$Chrome()
cn2en(drv, rawtext)
drv$quit()
library(devtools)
document()
?cn2en
document()
?cn2en
source('E:/27_MyRPackages/MyFun/data-raw/draft.R', encoding = 'UTF-8', echo=TRUE)
reticulate::repl_python()
import os
import time
quit
?reticulate
library(reticulate)
source_python('data-raw/cn2en_py')
getwd()
source_python('data-raw/cn2en_py.py')
rawtext <- read_docx('E:\\17_HuaDong\\research\\entrepreneurship\\draft\\EL/entrepreneurship_cn.docx')
ans <- docx_summary(rawtext)
library(officer)
rawtext <- read_docx('E:\\17_HuaDong\\research\\entrepreneurship\\draft\\EL/entrepreneurship_cn.docx')
ans <- docx_summary(rawtext)
trantext <- read_docx('E:\\17_HuaDong\\research\\entrepreneurship\\draft\\EL/entrepreneurship_draft.docx')
View(ans)
reticulate::repl_python()
from selenium import webdrvier
from selenium import webdriver
drv = webdriver.Chrome()
def cn2en_py(drv, rawtext, website = 'http://fanyi.youdao.com/'):
import time
# wait for 10s for any operation
drv.implicitly_wait(10)
drv.navigate(website)
# Chinese to English
drv.find_element_by_xpath('//*[@id="langSelect"]/span').click()
drv.find_element_by_xpath('//*[@id="languageSelect"]/li[2]/a').click()
# clear contents
drv.find_element_by_xpath('//*[@id="inputOriginal"]').clear()
# input text
drv.find_element_by_xpath('//*[@id="inputOriginal"]').send_keys(rawtext)
# get results
time.sleep(3)
tran_text = drv.find_element_by_xpath('//*[@id="transTarget"]').text
# tran_text couldn't be null
if str.count(tran_text) == 0:
j = True
while j:
if nchar(tran_text) == 0:
time.sleep(3)
tran_text = drv.find_element_by_xpath('//*[@id="transTarget"]').text
else:
break
cn2en_py(drv,'我是谁')
def cn2en_py(drv, rawtext, website = 'http://fanyi.youdao.com/'):
import time
# wait for 10s for any operation
drv.implicitly_wait(10)
drv.get(website)
# Chinese to English
drv.find_element_by_xpath('//*[@id="langSelect"]/span').click()
drv.find_element_by_xpath('//*[@id="languageSelect"]/li[2]/a').click()
# clear contents
drv.find_element_by_xpath('//*[@id="inputOriginal"]').clear()
# input text
drv.find_element_by_xpath('//*[@id="inputOriginal"]').send_keys(rawtext)
# get results
time.sleep(3)
tran_text = drv.find_element_by_xpath('//*[@id="transTarget"]').text
# tran_text couldn't be null
if str.count(tran_text) == 0:
j = True
while j:
if nchar(tran_text) == 0:
time.sleep(3)
tran_text = drv.find_element_by_xpath('//*[@id="transTarget"]').text
else:
break
cn2en_py(drv,'我是谁')
str.count('')
len('')
def cn2en_py(drv, rawtext, website = 'http://fanyi.youdao.com/'):
import time
# wait for 10s for any operation
drv.implicitly_wait(10)
drv.get(website)
# Chinese to English
drv.find_element_by_xpath('//*[@id="langSelect"]/span').click()
drv.find_element_by_xpath('//*[@id="languageSelect"]/li[2]/a').click()
# clear contents
drv.find_element_by_xpath('//*[@id="inputOriginal"]').clear()
# input text
drv.find_element_by_xpath('//*[@id="inputOriginal"]').send_keys(rawtext)
# get results
time.sleep(3)
tran_text = drv.find_element_by_xpath('//*[@id="transTarget"]').text
# tran_text couldn't be null
if len(tran_text) == 0:
j = True
while j:
if len(tran_text) == 0:
time.sleep(3)
tran_text = drv.find_element_by_xpath('//*[@id="transTarget"]').text
else:
break
cn2en_py(drv,'我是谁')
def cn2en_py(drv, rawtext, website = 'http://fanyi.youdao.com/'):
import time
# wait for 10s for any operation
drv.implicitly_wait(10)
drv.get(website)
# Chinese to English
drv.find_element_by_xpath('//*[@id="langSelect"]/span').click()
drv.find_element_by_xpath('//*[@id="languageSelect"]/li[2]/a').click()
# clear contents
drv.find_element_by_xpath('//*[@id="inputOriginal"]').clear()
# input text
drv.find_element_by_xpath('//*[@id="inputOriginal"]').send_keys(rawtext)
# get results
time.sleep(3)
tran_text = drv.find_element_by_xpath('//*[@id="transTarget"]').text
# tran_text couldn't be null
if len(tran_text) == 0:
j = True
while j:
if len(tran_text) == 0:
time.sleep(3)
tran_text = drv.find_element_by_xpath('//*[@id="transTarget"]').text
else:
break
return tran_text
cn2en_py(drv,'我是谁')
quit
rawtext <- read_docx('E:\\17_HuaDong\\research\\entrepreneurship\\draft\\EL/entrepreneurship_cn.docx')
ans <- docx_summary(rawtext)
trantext <- read_docx('E:\\17_HuaDong\\research\\entrepreneurship\\draft\\EL/entrepreneurship_draft.docx')
reticulate::repl_python()
ans.size()
r.ans
r.ans.size()
r.ans[1]
r.ans.iloc[0]
r.ans.iloc[0,2]
r.ans.shape()
type(r.ans)
r.ans.shape[0]
range(0, ans.shape[0])
def cn2en_py(rawtext, website = 'http://fanyi.youdao.com/'):
import time
from selenium import webdriver
drv = webdriver.Chrome()
# wait for 10s for any operation
drv.implicitly_wait(10)
drv.get(website)
# Chinese to English
drv.find_element_by_xpath('//*[@id="langSelect"]/span').click()
drv.find_element_by_xpath('//*[@id="languageSelect"]/li[2]/a').click()
# clear contents
drv.find_element_by_xpath('//*[@id="inputOriginal"]').clear()
# input text
drv.find_element_by_xpath('//*[@id="inputOriginal"]').send_keys(rawtext)
# get results
time.sleep(3)
tran_text = drv.find_element_by_xpath('//*[@id="transTarget"]').text
# tran_text couldn't be null
if len(tran_text) == 0:
j = True
while j:
if len(tran_text) == 0:
time.sleep(3)
tran_text = drv.find_element_by_xpath('//*[@id="transTarget"]').text
else:
break
drv.quit()
return tran_text
cn2en_py(drv,'我是谁')
cn2en_py('我是谁')
quit
rm(list = ls())
rm(list = ls())
devtools::load_all()
rawtext <- '我是中国人'
cn2en(rawtext)
rm(list = ls())
devtools::load_all()
library(reticulate)
library(officer)
rawtext <- read_docx('E:\\17_HuaDong\\research\\entrepreneurship\\draft\\EL/entrepreneurship_cn.docx')
ans <- docx_summary(rawtext)
trantext <- read_docx('E:\\17_HuaDong\\research\\entrepreneurship\\draft\\EL/entrepreneurship_draft.docx')
?body_add_par
View(ans)
i=14
ans$text[i]
library(stringr)
str_trim(ans$text[i])
nchar(str_trim(ans$text[i]))
source('E:/27_MyRPackages/MyFun/data-raw/draft.R', echo=TRUE)
devtools::load_all()
rm(list = ls())
devtools::load_all()
library(reticulate)
library(officer)
library(stringr)
rawtext <- read_docx('E:\\17_HuaDong\\research\\entrepreneurship\\draft\\EL/entrepreneurship_cn.docx')
ans <- docx_summary(rawtext)
mydoc <- read_docx('E:\\17_HuaDong\\research\\entrepreneurship\\draft\\EL/entrepreneurship_draft.docx')
for (i in 1:nrow(ans)) {
if (ans$content_type[i] == 'paragraph'){
if (nchar(str_trim(ans$text[i]) == 0))  next
text_en <- cn2en(ans$text[i])
mydoc <- body_add_par(mydoc,text_en, style = ans$style_name)
}
}
ans$content_type[i] == 'paragraph'
nchar(str_trim(ans$text[i]) == 0)
ans$text[i]
text_en <- cn2en(ans$text[i])
for (i in 1:nrow(ans)) {
if (ans$content_type[i] == 'paragraph'){
if (nchar(str_trim(ans$text[i]) == 0))  next
text_en <- cn2en(ans$text[i])
mydoc <- body_add_par(mydoc,text_en, style = ans$style_name)
}
}
View(mydoc)
1:nrow(ans)
i=1
if (ans$content_type[i] == 'paragraph'){
if (nchar(str_trim(ans$text[i]) == 0))  next
text_en <- cn2en(ans$text[i])
mydoc <- body_add_par(mydoc,text_en, style = ans$style_name)
}
ans$content_type[i] == 'paragraph'
nchar(str_trim(ans$text[i]) == 0)
for (i in 1:nrow(ans)) {
if (ans$content_type[i] == 'paragraph'){
if (nchar(str_trim(ans$text[i]) != 0)){
text_en <- cn2en(ans$text[i])
mydoc <- body_add_par(mydoc,text_en, style = ans$style_name)
}
}
}
mydoc <- read_docx('E:\\17_HuaDong\\research\\entrepreneurship\\draft\\EL/entrepreneurship_draft.docx')
for (i in 1:nrow(ans)) {
if (ans$content_type[i] == 'paragraph'){
if (nchar(str_trim(ans$text[i]) != 0)){
text_en <- cn2en(ans$text[i])
mydoc <- body_add_par(mydoc,text_en, style = ans$style_name[i])
}
}
}
nchar(str_trim(ans$text[i]) != 0)
ans$text[i]
str_trim(ans$text[i])
nchar(str_trim(ans$text[i]) != 0)
ans$text[i]
str_trim(ans$text[i])
nchar(str_trim(ans$text[i]))
mydoc <- read_docx('E:\\17_HuaDong\\research\\entrepreneurship\\draft\\EL/entrepreneurship_draft.docx')
for (i in 1:nrow(ans)) {
if (ans$content_type[i] == 'paragraph'){
if (nchar(str_trim(ans$text[i])) != 0){
text_en <- cn2en(ans$text[i])
mydoc <- body_add_par(mydoc,text_en, style = ans$style_name[i])
}
}
}
is.na(ans$style_name[i])
mydoc <- read_docx('E:\\17_HuaDong\\research\\entrepreneurship\\draft\\EL/entrepreneurship_draft.docx')
for (i in 1:nrow(ans)) {
if (ans$content_type[i] == 'paragraph'){
if (nchar(str_trim(ans$text[i])) != 0){
text_en <- cn2en(ans$text[i])
ifelse (is.na(ans$style_name[i]),
style_nm <- 'Normal',
style_nm <- ans$style_name[i])
mydoc <- body_add_par(mydoc,text_en, style = ans$style_name[i])
}
}
}
mydoc <- read_docx('E:\\17_HuaDong\\research\\entrepreneurship\\draft\\EL/entrepreneurship_draft.docx')
for (i in 1:nrow(ans)) {
if (ans$content_type[i] == 'paragraph'){
if (nchar(str_trim(ans$text[i])) != 0){
text_en <- cn2en(ans$text[i])
ifelse (is.na(ans$style_name[i]),
style_nm <- 'Normal',
style_nm <- ans$style_name[i])
mydoc <- body_add_par(mydoc,text_en, style = style_nm)
}
}
}
print(mydoc, target = 'E:\\17_HuaDong\\research\\entrepreneurship\\draft\\EL/entrepreneurship_en.docx')
devtools::load_all()
cn2en()
devtools::load_all()
cn2en()
library(devtools)
use_package('RCurl')
use_package('RJSONIO')
devtools::load_all()
cn2en()
load_all()
text_tran()
check()
document()
check()
check()
use_package('digest')
check()
check()
remove.packages('MyFun')
install_github('common2016/MyFun')
library(devtools)
load_all()
text_tran('Agriculture, hunting, forestry, and fishing',appid = '20210928000959317',keyimp = 'E6I4iuIrNy3Sdp9nFK52')
appid = '20210928000959317'
keyimp = 'E6I4iuIrNy3Sdp9nFK52'
rmdnum <- stats::rnorm(1)
ans <- paste(appid,rawtext,rmdnum,keyimp, sep = '')
rawtext <- 'Agriculture, hunting, forestry, and fishing'
ans <- paste(appid,rawtext,rmdnum,keyimp, sep = '')
sn <- digest::digest(ans, algo = 'md5',serialize = FALSE)
webadd <- paste('http://api.fanyi.baidu.com/api/trans/vip/translate?q=apple&from=en&to=zh&appid=',appid,
'&salt=',rmdnum,'&sign=',sn,sep = '')
RCurl::getURL(webadd) %>% RJSONIO::fromJSON()
?digest::digest
ans <- paste(appid,'apple',rmdnum,keyimp, sep = '')
sn <- digest::digest(ans, algo = 'md5',serialize = FALSE)
webadd <- paste('http://api.fanyi.baidu.com/api/trans/vip/translate?q=apple&from=en&to=zh&appid=',appid,
'&salt=',rmdnum,'&sign=',sn,sep = '')
RCurl::getURL(webadd) %>% RJSONIO::fromJSON()
ans <- paste(appid,'apple, white',rmdnum,keyimp, sep = '')
sn <- digest::digest(ans, algo = 'md5',serialize = FALSE)
webadd <- paste('http://api.fanyi.baidu.com/api/trans/vip/translate?q=apple&from=en&to=zh&appid=',appid,
'&salt=',rmdnum,'&sign=',sn,sep = '')
RCurl::getURL(webadd) %>% RJSONIO::fromJSON()
sn <- digest::digest(ans, algo = 'md5',serialize = T)
webadd <- paste('http://api.fanyi.baidu.com/api/trans/vip/translate?q=apple&from=en&to=zh&appid=',appid,
'&salt=',rmdnum,'&sign=',sn,sep = '')
RCurl::getURL(webadd) %>% RJSONIO::fromJSON()
webadd <- paste('http://api.fanyi.baidu.com/api/trans/vip/translate?q=',rawtext,'&from=',from,'&to=',to,'&appid=',appid,
'&salt=',rmdnum,'&sign=',sn,sep = '')
from = 'en'
to = 'zh'
webadd <- paste('http://api.fanyi.baidu.com/api/trans/vip/translate?q=',rawtext,'&from=',from,'&to=',to,'&appid=',appid,
'&salt=',rmdnum,'&sign=',sn,sep = '')
RCurl::getURL(webadd) %>% RJSONIO::fromJSON()
RCurl::getURL(webadd)
webadd
webadd <- paste('http://api.fanyi.baidu.com/api/trans/vip/translate?q=','apple','&from=',from,'&to=',to,'&appid=',appid,
'&salt=',rmdnum,'&sign=',sn,sep = '')
RCurl::getURL(webadd)
rmdnum <- stats::rnorm(1)
rawtext <- 'apple'
ans <- paste(appid,rawtext,rmdnum,keyimp, sep = '')
sn <- digest::digest(ans, algo = 'md5',serialize = FALSE)
webadd <- paste('http://api.fanyi.baidu.com/api/trans/vip/translate?q=',rawtext,'&from=',from,'&to=',to,'&appid=',appid,
'&salt=',rmdnum,'&sign=',sn,sep = '')
RCurl::getURL(webadd)
rawtext <- 'white'
ans <- paste(appid,rawtext,rmdnum,keyimp, sep = '')
sn <- digest::digest(ans, algo = 'md5',serialize = FALSE)
webadd <- paste('http://api.fanyi.baidu.com/api/trans/vip/translate?q=',rawtext,'&from=',from,'&to=',to,'&appid=',appid,
'&salt=',rmdnum,'&sign=',sn,sep = '')
RCurl::getURL(webadd)
rawtext <- 'white, green'
ans <- paste(appid,rawtext,rmdnum,keyimp, sep = '')
sn <- digest::digest(ans, algo = 'md5',serialize = FALSE)
webadd <- paste('http://api.fanyi.baidu.com/api/trans/vip/translate?q=',rawtext,'&from=',from,'&to=',to,'&appid=',appid,
'&salt=',rmdnum,'&sign=',sn,sep = '')
RCurl::getURL(webadd)
library(RCurl)
feed_url <- ''http://api.fanyi.baidu.com/api/trans/vip/translate'
feed_url <- 'http://api.fanyi.baidu.com/api/trans/vip/translate'
getForm(feed_url,.params = list(q = rawtext, from = from, to = to, appid = appid, salt = rmdnum, sign = sn))
rlt <- RCurl::getForm(feed_url,.params = list(q = rawtext, from = from, to = to,
appid = appid, salt = rmdnum, sign = sn)) %>%
RJSONIO::fromJSON()
rlt$trans_result

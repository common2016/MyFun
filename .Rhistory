document()
?ar2ma
document()
?ar2ma
use_package('vars')
use_package('matlab')
use_package('Matrix')
use_data_raw('test')
## code to prepare `test` dataset goes here
devtools::load_all()
?vars::Bcoef
data(Canada, package = 'vars')
VAR(Canada, p = 2, type = "none")
vars::VAR(Canada, p = 2, type = "none")
library(vars)
vars::VAR(Canada, p = 2, type = "none") %>% Phi()
library(tidyverse)
vars::VAR(Canada, p = 2, type = "none") %>% Phi()
vars::VAR(Canada, p = 2, type = "none") %>% Bcoef()
ar <- vars::VAR(Canada, p = 2, type = "none") %>% Bcoef()
ar2ma(ar)
document()
?ar2ma
vars::VAR(Canada, p = 2, type = "none") %>% vars::summary()
vars::VAR(Canada, p = 2, type = "none") %>% summary()
devtools::check()
devtools::document()
devtools::check()
library(devtools)
use_package('magrittr')
devtools::check()
document()
devtools::check()
document()
check()
load_all()
check()
document()
check()
usethis::use_vignette('edu')
flpath <- 'data-raw/人口/人口基本情况安徽(年).xlsx'
gdp <- openxlsx::read.xlsx(flpath,1,rows = c(1,3:16))
flpath <- 'data-raw/人口/人口基本情况安徽(年).xls'
gdp <- xlsx::read.xlsx(flpath,1,rows = c(1,3:16))
?xlsx::read.xlsx
gdp <- xlsx::read.xlsx(flpath,1,rowIndex = c(1,3:16))
gdp <- xlsx::read.xlsx(flpath,1,rowIndex = c(1,3:16), encoding = 'uft-8')
gdp <- xlsx::read.xlsx(flpath,1,rowIndex = c(1,3:16), encoding = 'uft8')
gdp <- xlsx::read.xlsx(flpath,1,rowIndex = c(1,3:16), encoding = 'UTF8')
gdp <- xlsx::read.xlsx(flpath,1,rowIndex = c(1,3:16), encoding = 'UTF-8')
View(gdp)
gdp <- melt(gdp, id.vars = '指标名称', value.name = var, variable.name = 'yr')
library(reshape2)
gdp <- melt(gdp, id.vars = '指标名称', value.name = var, variable.name = 'yr')
var = 'gdp'
gdp <- melt(gdp, id.vars = '指标名称', value.name = var, variable.name = 'yr')
gdp <- xlsx::read.xlsx(flpath,1,rowIndex = c(1,3:16), encoding = 'UTF-8')
gdp <- melt(gdp, id.vars = '指标名称', value.name = var, variable.name = 'var')
gdp$prv <- str_sub(gdp$var,1,2)
library(tidyverse)
gdp$prv <- str_sub(gdp$var,1,2)
str_split(gdp,'\\.')
str_split(gdp$var,'\\.')
str_split_fixed(gdp$var,'\\.',3)
str_split_fixed(gdp$var,'\\.',3) %>% .[,3]
gdpvar <- str_split_fixed(gdp$var,'\\.',3) %>% .[,3]
gdp$var <- str_split_fixed(gdp$var,'\\.',3) %>% .[,3]
View(gdp)
str_split_fixed(gdp$var,'\\.',2)
gdp <- xlsx::read.xlsx(flpath,1,rowIndex = c(1,3:16), encoding = 'UTF-8')
gdp <- melt(gdp, id.vars = '指标名称', value.name = var, variable.name = 'var')
gdp$prv <- str_sub(gdp$var,1,2)
gdp$var <- str_split_fixed(gdp$var,'\\.',4) %>% .[,4]
gdp$var[length(gdp$var)==0] <- '人口数'
gdp$var[length(gdp$var)==0]
length(gdp$var)
gdp$var[nchar(gdp$var)==0] <- '人口数'
gdp <- xlsx::read.xlsx(flpath,1,rowIndex = c(1,3:16), encoding = 'UTF-8')
gdp <- melt(gdp, id.vars = '指标名称', value.name = var, variable.name = 'var')
gdp$prv <- str_sub(gdp$var,1,2)
gdp$var <- str_split_fixed(gdp$var,'\\.',4) %>% .[,4]
gdp$var[nchar(gdp$var)==0] <- '人口数'
gdp <- dplyr::rename(gdp, yr = 指标名称)
?lapply(list, function)
?lapply
dir('data-raw/人口')
dir('data-raw/人口') %>% paste('data-raw/人口',.,sep = '/')
flpath <- dir('data-raw/人口') %>% paste('data-raw/人口',.,sep = '/')
edu <- list()
flpath <- dir('data-raw/人口') %>% paste('data-raw/人口',.,sep = '/')
for (i in 1:length(flpath)) {
edu[[i]]  <- StatBur(flpath[i])
}
StatBur <- function(flpath = 'data-raw/人口/.xlsx', var = 'value'){
gdp <- xlsx::read.xlsx(flpath,1,rowIndex = c(1,3:16), encoding = 'UTF-8')
gdp <- melt(gdp, id.vars = '指标名称', value.name = var, variable.name = 'var')
gdp$prv <- str_sub(gdp$var,1,2)
gdp$var <- str_split_fixed(gdp$var,'\\.',4) %>% .[,4]
gdp$var[nchar(gdp$var)==0] <- '人口数'
gdp <- dplyr::rename(gdp, yr = 指标名称)
return(gdp)
}
for (i in 1:length(flpath)) {
edu[[i]]  <- StatBur(flpath[i])
}
View(edu)
edu <- bind_rows(edu)
edu <- dcast(edu, prv + yr ~ var, value.var = 'value')
View(edu)
View(gdp)
gdp <- xlsx::read.xlsx(flpath,1,rowIndex = c(1,3:16), encoding = 'UTF-8')
gdp <- melt(gdp, id.vars = '指标名称', value.name = var, variable.name = 'var')
gdp$prv <- str_sub(gdp$var,1,2)
gdp$var <- str_split_fixed(gdp$var,'\\.',4) %>% .[,4]
gdp$var[nchar(gdp$var)==0] <- '人口数'
flpath = 'data-raw/人口/人口基本情况安徽(年).xls'
gdp <- xlsx::read.xlsx(flpath,1,rowIndex = c(1,3:16), encoding = 'UTF-8')
gdp <- melt(gdp, id.vars = '指标名称', value.name = var, variable.name = 'var')
gdp$prv <- str_sub(gdp$var,1,2)
gdp$var <- str_split_fixed(gdp$var,'\\.',4) %>% .[,4]
gdp$var[nchar(gdp$var)==0] <- '人口数'
gdp <- dplyr::rename(gdp, yr = 指标名称)
View(gdp)
gdp <- dcast(gdp, prv + yr ~ var, value.var = var)
rbind(gdp,gdp[1,])
gdp <- rbind(gdp,gdp[1,])
gpd[nrow(gdp),2:ncol(gdp )] <- NA
gdp[nrow(gdp),2:ncol(gdp )] <- NA
gdp <- xlsx::read.xlsx(flpath,1,rowIndex = c(1,3:16), encoding = 'UTF-8')
gdp <- melt(gdp, id.vars = '指标名称', value.name = var, variable.name = 'var')
gdp$prv <- str_sub(gdp$var,1,2)
gdp$var <- str_split_fixed(gdp$var,'\\.',4) %>% .[,4]
gdp$var[nchar(gdp$var)==0] <- '人口数'
gdp <- dplyr::rename(gdp, yr = 指标名称)
gdp <- dcast(gdp, prv + yr ~ var, value.var = var)
gdp <- rbind(gdp,gdp[1,])
gdp[nrow(gdp),3:ncol(gdp )] <- NA
gdp[nrow(gdp),2] <- as.Date('2010-12-31')
gdp <- arrange(gdp,prv,yr)
apply(gdp, 2, zoo::na.approx)
apply(gdp[,3:ncol(gdp)], 2, zoo::na.approx)
gdp[,3:ncol(gdp)] <- apply(gdp[,3:ncol(gdp)], 2, zoo::na.approx)
gdp[,c('小学','初中','高中','人口数')] <- apply(gdp[,c('小学','初中','高中','人口数')], 2, zoo::na.approx)
source('E:/27_MyRPackages/MyFun/data-raw/edu.R', encoding = 'UTF-8', echo=TRUE)
View(edu)
gdp <- xlsx::read.xlsx('data-raw/抽样数人口数未上过学.xls',1,rowIndex = c(1,3:16), encoding = 'UTF-8')
gdp <- melt(gdp, id.vars = '指标名称', value.name = var, variable.name = 'var')
gdp <- melt(gdp, id.vars = '指标名称', value.name = 'gdp', variable.name = 'var')
gdp$prv <- str_sub(gdp$var,1,2)
gdp$var <- str_split_fixed(gdp$var,'\\.',4) %>% .[,4]
gdp <- xlsx::read.xlsx('data-raw/抽样数人口数未上过学.xls',1,rowIndex = c(1,3:16), encoding = 'UTF-8')
gdp <- melt(gdp, id.vars = '指标名称', value.name = 'gdp', variable.name = 'var')
gdp$prv <- str_sub(gdp$var,1,2)
gdp$var <- str_split_fixed(gdp$var,'\\.',4) %>% .[,4]
gdp <- dplyr::rename(gdp, yr = 指标名称)
gdp <- dcast(gdp, yr + var ~ prv, value.var = var)
gdp <- dcast(gdp, yr + var ~ prv, value.var = 'gdp')
gdp <- rbind(gdp,gdp[1,])
gdp[nrow(gdp),3:ncol(gdp)] <- NA
gdp[nrow(gdp),1] <- as.Date('2010-12-31')
gdp <- arrange(gdp,yr)
gdp[,-(1:2)] <- apply(gdp[,-(1:2)], 2, zoo::na.approx)
melt(gdp,id.vars = 'yr')
melt(gdp,id.vars = c('yr','var'))
melt(gdp,id.vars = c('yr','var'),variable.name = 'prv') %>% dcast(prv + yr ~ var, value.var = 'value')
merge(edu, gdp, by = c('prv','yr'))
source('E:/27_MyRPackages/MyFun/data-raw/edu.R', encoding = 'UTF-8', echo=TRUE)
source('E:/27_MyRPackages/MyFun/data-raw/edu.R', encoding = 'UTF-8', echo=TRUE)
View(edu)
apply(edu[,3:4],2,divide_by,e2 = edu$人口数)
divide_by(1,2)
?divide_by
apply(edu[,3:4],2,magrittr::divide_by,e2 = edu$人口数)
edu[,-(1:2)] <- apply(edu[,-(1:2)],2,magrittr::divide_by,e2 = edu$人口数)
?mean
edu <- edu[,c('prv','yr','未上过学','小学','初中','高中','中职','大学专科','大学本科','研究生','人口数')]
source('E:/27_MyRPackages/MyFun/data-raw/edu.R', encoding = 'UTF-8', echo=TRUE)
edu[edu$yr >= as.Date('2015-12-31'),]
apply(edu[edu$yr >= as.Date('2015-12-31'),-(1:2)],2,weighted.mean, w = c(0,6,9,12,12,15,18,19,22))
apply(edu[edu$yr >= as.Date('2015-12-31'),-(1:2)],1,weighted.mean, w = c(0,6,9,12,12,15,18,19,22))
apply(edu[edu$yr >= as.Date('2015-12-31'),-(1:2)],1,weighted.mean, w = c(0,6,9,12,12,15,16,19))
weighted.mean(edu[11,-(1:2)],c(0,6,9,12,12,15,16,19))
weighted.mean(edu[11,-(1:2)],c(0,6,9,12,12,15,16,19)/sum(c(0,6,9,12,12,15,16,19)))
edu$edu <- NA
edu$edu[edu$yr >= as.Date('2015-12-31')]  <- apply(edu[edu$yr >= as.Date('2015-12-31'),-(1:2)],1,weighted.mean, w = c(0,6,9,12,12,15,16,19))
apply(edu[edu$yr >= as.Date('2015-12-31'),-(1:2)],1,weighted.mean, w = c(0,6,9,12,12,15,16,19))
source('E:/27_MyRPackages/MyFun/data-raw/edu.R', encoding = 'UTF-8', echo=TRUE)
edu$edu[edu$yr >= as.Date('2015-12-31')]  <-
apply(edu[edu$yr >= as.Date('2015-12-31'),-c(1:2,ncol(edu))],1,weighted.mean, w = c(0,6,9,12,12,15,16,19))
mean(c(12,15,16,19))
source('E:/27_MyRPackages/MyFun/data-raw/edu.R', encoding = 'UTF-8', echo=TRUE)
i=1
(1-edu$未上过学[i] - edu$小学[i] - edu$初中[i] - edu$高中[i])
(edu[i,c('中职','大学专科','大学本科','研究生')]/sum(edu[i,c('中职','大学专科','大学本科','研究生')]))
(edu[edu$yr == '2015-12-13',c('中职','大学专科','大学本科','研究生')]/
sum(edu[edu$yr == '2015-12-13',c('中职','大学专科','大学本科','研究生')]))
(edu[edu$yr == as.Date('2015-12-13'),c('中职','大学专科','大学本科','研究生')]/
sum(edu[edu$yr == as.Date('2015-12-13'),c('中职','大学专科','大学本科','研究生')]))
edu[edu$yr == as.Date('2015-12-13'),c('中职','大学专科','大学本科','研究生')]
edu[edu$yr %in% as.Date('2015-12-13'),c('中职','大学专科','大学本科','研究生')]
edu[edu$yr %in% as.Date('2015-12-31'),c('中职','大学专科','大学本科','研究生')]
edu[edu$yr %in% as.Date('2015-12-31') & edu$prv %in% edu$prv[i],c('中职','大学专科','大学本科','研究生')]
(edu[edu$yr %in% as.Date('2015-12-31') & edu$prv %in% edu$prv[i],c('中职','大学专科','大学本科','研究生')]/
sum(edu[edu$yr == as.Date('2015-12-31') & edu$prv %in% edu$prv[i],c('中职','大学专科','大学本科','研究生')]))
(1-edu$未上过学[i] - edu$小学[i] - edu$初中[i] - edu$高中[i]) *
(edu[edu$yr %in% as.Date('2015-12-31') & edu$prv %in% edu$prv[i],c('中职','大学专科','大学本科','研究生')]/
sum(edu[edu$yr == as.Date('2015-12-31') & edu$prv %in% edu$prv[i],c('中职','大学专科','大学本科','研究生')]))
source('E:/27_MyRPackages/MyFun/data-raw/edu.R', encoding = 'UTF-8', echo=TRUE)
# gdp 就是未上学
StatTab <- function(flpath = 'data-raw/抽样数人口数未上过学.xls'){
gdp <- xlsx::read.xlsx(flpath,1,rowIndex = c(1,3:16), encoding = 'UTF-8')
gdp <- melt(gdp, id.vars = '指标名称', value.name = 'gdp', variable.name = 'var')
gdp$prv <- str_sub(gdp$var,1,2)
gdp$var <- str_split_fixed(gdp$var,'\\.',4) %>% .[,4]
gdp <- dplyr::rename(gdp, yr = 指标名称)
gdp <- dcast(gdp, yr + var ~ prv, value.var = 'gdp')
gdp <- rbind(gdp,gdp[1,])
gdp[nrow(gdp),3:ncol(gdp)] <- NA
gdp[nrow(gdp),1] <- as.Date('2010-12-31')
gdp <- arrange(gdp,yr)
gdp[,-(1:2)] <- apply(gdp[,-(1:2)], 2, zoo::na.approx)
return(gdp)
}
unread <- StatTab()
View(unread)
illlit <- StatTab('data-raw/抽样数文盲人口.xls')
View(illlit)
# gdp 就是未上学
StatTab <- function(flpath = 'data-raw/抽样数人口数未上过学.xls'){
gdp <- xlsx::read.xlsx(flpath,1,rowIndex = c(1,3:16), encoding = 'UTF-8')
gdp <- melt(gdp, id.vars = '指标名称', value.name = 'gdp', variable.name = 'var')
gdp$prv <- str_sub(gdp$var,1,2)
gdp$var <- str_split_fixed(gdp$var,'\\.',4) %>% .[,4]
gdp <- dplyr::rename(gdp, yr = 指标名称)
gdp <- dcast(gdp, yr + var ~ prv, value.var = 'gdp')
gdp <- rbind(gdp,gdp[1,])
gdp[nrow(gdp),3:ncol(gdp)] <- NA
gdp[nrow(gdp),1] <- as.Date('2010-12-31')
gdp <- arrange(gdp,yr)
gdp[,-(1:2)] <- apply(gdp[,-(1:2)], 2, zoo::na.approx)
gdp <- melt(gdp,id.vars = c('yr','var'),variable.name = 'prv') %>% dcast(prv + yr ~ var, value.var = 'value')
return(gdp)
}
illlit <- StatTab('data-raw/抽样数文盲人口.xls')
illlit <- dplyr::rename(illlit, 文盲= Var.3)
rm(list = ls())
library(reshape2)
library(tidyverse)
StatBur <- function(flpath = 'data-raw/人口/人口基本情况安徽(年).xls', var = 'value'){
gdp <- xlsx::read.xlsx(flpath,1,rowIndex = c(1,3:16), encoding = 'UTF-8')
gdp <- melt(gdp, id.vars = '指标名称', value.name = var, variable.name = 'var')
gdp$prv <- str_sub(gdp$var,1,2)
gdp$var <- str_split_fixed(gdp$var,'\\.',4) %>% .[,4]
gdp$var[nchar(gdp$var)==0] <- '人口数'
gdp <- dplyr::rename(gdp, yr = 指标名称)
gdp <- dcast(gdp, prv + yr ~ var, value.var = var)
gdp <- rbind(gdp,gdp[1,])
gdp[nrow(gdp),3:ncol(gdp)] <- NA
gdp[nrow(gdp),2] <- as.Date('2010-12-31')
gdp <- arrange(gdp,prv,yr)
gdp[,c('小学','初中','高中','人口数')] <- apply(gdp[,c('小学','初中','高中','人口数')], 2, zoo::na.approx)
return(gdp)
}
edu <- list()
flpath <- dir('data-raw/人口') %>% paste('data-raw/人口',.,sep = '/')
for (i in 1:length(flpath)) {
edu[[i]]  <- StatBur(flpath[i])
}
edu <- bind_rows(edu)
# gdp 就是未上学
StatTab <- function(flpath = 'data-raw/抽样数人口数未上过学.xls'){
gdp <- xlsx::read.xlsx(flpath,1,rowIndex = c(1,3:16), encoding = 'UTF-8')
gdp <- melt(gdp, id.vars = '指标名称', value.name = 'gdp', variable.name = 'var')
gdp$prv <- str_sub(gdp$var,1,2)
gdp$var <- str_split_fixed(gdp$var,'\\.',4) %>% .[,4]
gdp <- dplyr::rename(gdp, yr = 指标名称)
gdp <- dcast(gdp, yr + var ~ prv, value.var = 'gdp')
gdp <- rbind(gdp,gdp[1,])
gdp[nrow(gdp),3:ncol(gdp)] <- NA
gdp[nrow(gdp),1] <- as.Date('2010-12-31')
gdp <- arrange(gdp,yr)
gdp[,-(1:2)] <- apply(gdp[,-(1:2)], 2, zoo::na.approx)
gdp <- melt(gdp,id.vars = c('yr','var'),variable.name = 'prv') %>% dcast(prv + yr ~ var, value.var = 'value')
return(gdp)
}
unread <- StatTab()
illlit <- StatTab('data-raw/抽样数文盲人口.xls')
illlit <- dplyr::rename(illlit, 文盲= Var.3)
edu <- merge(edu, unread, by = c('prv','yr')) %>% merge(illlit, by = c('prv','yr'))
View(edu)
edu[,-(1:2)] <- apply(edu[,-(1:2)],2,magrittr::divide_by,e2 = edu$人口数)
edu <- edu[,c('prv','yr','文盲','未上过学','小学','初中','高中','中职','大学专科','大学本科','研究生')]
edu$edu <- NA
edu$edu <- NA
for (i in 1:nrow(edu)) {
if (edu$yr[i] < as.Date('2015-12-31')) {
edu[i,c('中职','大学专科','大学本科','研究生')] <-
(1-edu$文盲[i] - edu$未上过学[i] - edu$小学[i] - edu$初中[i] - edu$高中[i]) *
(edu[edu$yr %in% as.Date('2015-12-31') & edu$prv %in% edu$prv[i],c('中职','大学专科','大学本科','研究生')]/
sum(edu[edu$yr == as.Date('2015-12-31') & edu$prv %in% edu$prv[i],c('中职','大学专科','大学本科','研究生')]))
}
edu$edu[i] <- edu$小学[i] * 6 + edu$初中[i] * 9 + (edu$高中[i]+edu$中职[i]) * 12 +
edu$大学专科[i] * 15 + edu$大学本科[i] * 16 + edu$研究生[i] * 19
}
i=1
(1-edu$文盲[i] - edu$未上过学[i] - edu$小学[i] - edu$初中[i] - edu$高中[i])
source('E:/27_MyRPackages/MyFun/data-raw/edu.R', encoding = 'UTF-8', echo=TRUE)
source('E:/27_MyRPackages/MyFun/data-raw/edu.R', encoding = 'UTF-8', echo=TRUE)
source('E:/27_MyRPackages/MyFun/data-raw/edu.R', encoding = 'UTF-8', echo=TRUE)
devtools::document()
getwd()
?ar2ma
devtools::load_all()
?ar2ma
data(Canada, package = 'vars')
ar <- vars::Bcoef(vars::VAR(Canada, p = 1, type = "none"))
ar2ma()
ar2ma(ar, p = 1)
ar2ma(ar, p = 1)
devtools::load_all()
ar2ma(ar, p = 1)
sprintf('The max characteristic root is %f',max(Mod(eigen(Fchar)$values))) %>% print()
View(Fmr)
Fmr[[1]]
rbind(phin, cbind(Matrix::bdiag(In),matlab::zeros(nrow(Matrix::bdiag(In)))))
phin
cbind(Matrix::bdiag(In)
,matlab::zeros(nrow(Matrix::bdiag(In)
)
)
)
eigen(Fmr[[1]])
Mod(eigen(Fmr[[1]])$values)
library(devtools)
load_all()
ar2ma(ar,1)
ar <- vars::Bcoef(vars::VAR(Canada, p = 2, type = "none"))
ar2ma(ar,2)
ar <- vars::Bcoef(vars::VAR(Canada, p = 3, type = "none"))
ar2ma(ar,3)
load_all()
ar2ma(ar,3)
phin
ar2ma(ar,3)
rbind(phin, cbind(Matrix::bdiag(In),matlab::zeros(nrow(Matrix::bdiag(In)))))
cbind(Matrix::bdiag(In)
cbind(Matrix::bdiag(In),matlab::zeros(nrow(Matrix::bdiag(In))))
Matrix::bdiag(In)
matlab::zeros(nrow(Matrix::bdiag(In)))
cbind(Matrix::bdiag(In),matlab::zeros(nrow(Matrix::bdiag(In)))
)
cbind(Matrix::bdiag(In),matlab::zeros(nrow(Matrix::diag(In)))
)
cbind(Matrix::bdiag(In),matlab::zeros(nrow(Matrix::diag(1)))
)
diag(1)
diag(rep(1,4))
library(matlab)
?zeros
zeros(1,2)
cbind(Matrix::bdiag(In),matlab::zeros(nrow(Matrix::diag(In)),4))
cbind(Matrix::bdiag(In),matlab::zeros(nrow(Matrix::diag(In))))
cbind(Matrix::bdiag(In),matlab::zeros(nrow(Matrix::bdiag(In)))
)
cbind(Matrix::bdiag(In),matlab::zeros(nrow(Matrix::bdiag(In))))
cbind(Matrix::bdiag(In),matlab::zeros(nrow(Matrix::bdiag(In)),4))
phin
View(Fmr)
View(Fmr)
load_all()
ar2ma(ar,3)
load_all()
ar2ma(ar,3)
rbind(phin,
cbind(Matrix::bdiag(In),
matlab::zeros(nrow(Matrix::bdiag(In))),ncol(Fmr[[1]])))
cbind(Matrix::bdiag(In),
matlab::zeros(nrow(Matrix::bdiag(In))),ncol(Fmr[[1]]))
ncol(Fmr[[1]])
matlab::zeros(nrow(Matrix::bdiag(In))),ncol(Fmr[[1]])
matlab::zeros(nrow(Matrix::bdiag(In)),,ncol(Fmr[[1]]))
matlab::zeros(nrow(Matrix::bdiag(In)),ncol(Fmr[[1]]))
rbind(phin,
cbind(Matrix::bdiag(In),
matlab::zeros(nrow(Matrix::bdiag(In)),ncol(Fmr[[1]])))
rbind(phin,
cbind(Matrix::bdiag(In),
matlab::zeros(nrow(Matrix::bdiag(In)),ncol(Fmr[[1]]))))
matlab::zeros(nrow(Matrix::bdiag(In)),ncol(Fmr[[1]])
matlab::zeros(nrow(Matrix::bdiag(In)),ncol(Fmr[[1]]))
matlab::zeros(nrow(Matrix::bdiag(In)),ncol(Fmr[[1]]))
matlab::zeros(nrow(Matrix::bdiag(In)),ncol(Fmr[[1]])) %>%
cbind(Matrix::bdiag(In),.)
matlab::zeros(nrow(Matrix::bdiag(In)),ncol(Fmr[[1]])) %>%
cbind(Matrix::bdiag(In),.) %>% rbind(phin,.)
load_all()
ar2ma(ar,3)
ar2ma(ar,3)
load_all()
ar2ma(ar,3)
fit <- vars::VAR(Canada, p = 2, type = "none")
fit
summary(fit)
ar2ma(ar)
ar <- vars::Bcoef(vars::VAR(Canada, p = 2, type = "none"))
ar2ma(ar)
ar <- vars::Bcoef(vars::VAR(Canada, p = 3, type = "none"))
fit <- vars::VAR(Canada, p = 3, type = "none"))
fit <- vars::VAR(Canada, p = 3, type = "none")
summary(fit)
ar2ma(ar)
data(Canada)
data(Canada, package = 'vars')
Canada
xlsx::write.xlsx(Canada, file = 'data-raw/canada.xlsx')
ar
ma <- ar2ma(ar)
ans <- ma[[2]]
library(vars)
?resid
fit <- vars::VAR(Canada, p = 2, type = "none")
fit <- vars::VAR(Canada, p = 3, type = "none")
residuals(fit)
residuals(fit) %*% t(residuals(fit))
t(residuals(fit)) %*% residuals(fit)
fit <- vars::VAR(Canada, p = 3, type = "drift")
fit <- vars::VAR(Canada, p = 3, type = "const")
t(residuals(fit)) %*% residuals(fit)
ar
ma[[1]]
ma[[2]]
ell <- matlab::zeros(nrow(ans),1)
ans %*% sig_u %*% ell
sig_u = t(residuals(fit)) %*% residuals(fit)
ans %*% sig_u %*% ell
imp_var <- 3
sig_u = t(residuals(fit)) %*% residuals(fit)
ma = ar2ma(ar)
ans <- ma[[2]]
ell <- matlab::zeros(nrow(ans),1)
ell[imp_var] <- 1
ans %*% sig_u %*% ell
ans %*% sig_u %*% ell/sqrt(t(ell) %*% sig_u %*% ell)
t(ell) %*% sig_u %*% ell
sqrt(t(ell) %*% sig_u %*% ell)
ans %*% sig_u %*% ell
(ans %*% sig_u %*% ell)/sqrt(t(ell) %*% sig_u %*% ell)
(ans %*% sig_u %*% ell) * sqrt(t(ell) %*% sig_u %*% ell)
2 * matrix(2,2,1)
(ans %*% sig_u %*% ell)
sqrt(t(ell) %*% sig_u %*% ell) * (ans %*% sig_u %*% ell)
sqrt(t(ell) %*% sig_u %*% ell)
(ans %*% sig_u %*% ell)/(as.numeric(sqrt(t(ell) %*% sig_u %*% ell)))
ar
lapply(ma, GI_single, imp_var = imp_var)
GI_single <- function(ans, imp_var){
ell <- matlab::zeros(nrow(ans),1)
ell[imp_var] <- 1
return((ans %*% sig_u %*% ell)/(as.numeric(sqrt(t(ell) %*% sig_u %*% ell))))
}
lapply(ma, GI_single, imp_var = imp_var)
lapply(ma, GI_single, imp_var = imp_var) %>% dplyr::bind_cols()
dplyr::bind_cols(irf)
irf <- lapply(ma, GI_single, imp_var = imp_var)
dplyr::bind_cols(irf)
ans <- dplyr::bind_cols(irf)
irf <- lapply(ma, GI_single, imp_var = imp_var)
ans <- dplyr::bind_cols(irf)
row.names(ans) <- row.names(irf[[1]])
ans
row.names(ans)
row.names(irf[[1]])
irf[[1]]
ma[[1]]
View(ma)
ma[["1"]]
row.names(ans) <- row.names(ma[[2]])
row.names(ans)
ans
?tibble
ans <- dplyr::bind_cols(irf) %>% as.data.frame()
row.names(ans) <- row.names(ma[[2]])
ans
library(devtools)
library(usethis)
use_package('dplyr')
document()
check()
document()
check()
check()
document()
check()
1 %>% c(2)
1 %>% c(2,'.')
1 %>% c(2,`.`)
1 %>% c(2,3,`.`)
check()
## code to prepare `test` dataset goes here
devtools::load_all()
library(vars)
library(tidyverse)
data(Canada, package = 'vars')
ar <- vars::VAR(Canada, p = 2, type = "none") %>% vars::Bcoef()
ar2ma(ar)
ma <- ar2ma(ar)
# GIRF
fit <- vars::VAR(Canada, p = 2, type = "none")
sig_u = t(residuals(fit)) %*% residuals(fit)
GI(ma, sig_u, imp_var = 1)
?GI
View(ar)
